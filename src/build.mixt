import [
	procat = "scripts/procat.mixt"
	menu = "scripts/menu.mixt"
	config = "config.mixt"
]

let
	//selector = null
	selector = (id as text) => true
	//selector = (id as text) => (id == "about")

	documentsTable = config{ navTable }
	docSet = Table.ToRecords(
		if selector == null then
			documentsTable
		else
			Table.SelectRows(
				documentsTable
				(doc) => selector( doc{ id } )
			)
	)
	pagesAndSections = menu::generate( docSet )
	written = List.Accumulate(
		docSet
		{}
		( state, current, docIndex ) => (
			let
				docContent = current{ source }
				result = Record.AddField(
					state
					current{ id }
					File.Write(
						FilePath.Join( current{ path }, current{ target } )
						Html.FromValue(
							procat::document(
								config{ siteName }  // site name
								config{ siteOwner } // site owner
								docContent
								docIndex
								docSet
								pagesAndSections
							)
						)
					)
				)
			in
				result
		)
	)
in
	written
